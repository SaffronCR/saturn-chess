/*
   3D model generated by Jo Map Editor v6.1
*/

#ifndef __3D_MODELKingBlack_H__
# define __3D_MODELKingBlack_H__

static POINT    PointKingBlack[] =
{
	{2088426, -2719168, 1205752},
	{2088426, -2719168, -1205754},
	{0, -2719168, 2411507},
	{-2088427, -2719168, 1205754},
	{-2088427, -2719168, -1205752},
	{0, -2719168, -2411507},
	{2837794, -1139442, 1638399},
	{2837794, -1139442, -1638401},
	{0, -1139442, 3276800},
	{-2837794, -1139441, 1638401},
	{-2837794, -1139441, -1638399},
	{0, -1139442, -3276800},
	{2837794, 16143, -1638401},
	{2837794, 16143, 1638399},
	{0, 16143, 3276800},
	{-2837794, 16143, 1638401},
	{-2837794, 16143, -1638399},
	{0, 16143, -3276800},
	{1005010, -8628865, 580242},
	{1005010, -8628865, -580242},
	{0, -8628865, 1160486},
	{-1005010, -8628865, 580242},
	{-1005011, -8628865, -580242},
	{0, -8628865, -1160486},
	{2383746, -8920595, 1376256},
	{2383746, -8920595, -1376256},
	{0, -8920595, 2752513},
	{-2383746, -8920595, 1376256},
	{-2383746, -8920595, -1376256},
	{0, -8920595, -2752513},
	{1287222, -9374916, 743178},
	{1287222, -9374916, -743178},
	{0, -9374916, 1486357},
	{-1287223, -9374916, 743178},
	{-1287223, -9374916, -743177},
	{0, -9374916, -1486357},
	{1856500, -10710023, 1071850},
	{1856500, -10710023, -1071851},
	{0, -10710023, 2143701},
	{-1856500, -10710023, 1071850},
	{-1856500, -10710023, -1071850},
	{0, -10710023, -2143701},
	{2124209, -11773319, 1226413},
	{2124209, -11773319, -1226413},
	{0, -11773319, 2452828},
	{-2124211, -11773319, 1226413},
	{-2124211, -11773319, -1226411},
	{0, -11773319, -2452828},
	{1235872, -12045324, -713531},
	{1235872, -12045324, 713530},
	{0, -12045324, 1427063},
	{-1235873, -12045324, 713531},
	{-1235873, -12045324, -713530},
	{0, -12045324, -1427063},
	{415138, -12638793, -399467},
	{415138, -12638793, 399467},
	{0, -12638793, 798935},
	{-415139, -12638793, 399467},
	{-415139, -12638793, -399467},
	{0, -12638793, -798935},
	{415138, -13367252, -399467},
	{415138, -13367252, 399467},
	{-415139, -13367252, 399467},
	{-415139, -13367252, -399467},
	{415138, -14048741, -399467},
	{415138, -14048741, 399467},
	{-415139, -14048741, 399467},
	{-415139, -14048741, -399467},
	{415138, -14960047, -399467},
	{415138, -14960047, 399467},
	{-415139, -14960047, 399467},
	{-415139, -14960047, -399467},
	{-1231696, -14048741, -399467},
	{-1231696, -14048741, 399467},
	{-1231696, -13367252, -399467},
	{-1231696, -13367252, 399467},
	{1231695, -14048741, 399467},
	{1231695, -14048741, -399467},
	{1231695, -13367252, 399467},
	{1231695, -13367252, -399467},
	{2088426, -2719168, -1205754},
	{2837794, -1139442, -1638401},
	{2837794, -1139442, -1638401},
	{2837794, -1139442, -1638401},
	{2837794, -1139442, 1638399},
	{2837794, -1139442, 1638399},
	{2837794, -1139442, 1638399},
	{2088426, -2719168, 1205752},
	{0, -1139442, 3276800},
	{0, -1139442, 3276800},
	{0, -1139442, 3276800},
	{0, -2719168, 2411507},
	{-2837794, -1139441, 1638401},
	{-2837794, -1139441, 1638401},
	{-2837794, -1139441, 1638401},
	{-2088427, -2719168, 1205754},
	{-2837794, -1139441, -1638399},
	{-2837794, -1139441, -1638399},
	{-2837794, -1139441, -1638399},
	{-2088427, -2719168, -1205752},
	{0, -1139442, -3276800},
	{0, -1139442, -3276800},
	{0, -1139442, -3276800},
	{0, -2719168, -2411507},
	{2837794, 16143, -1638401},
	{2837794, 16143, -1638401},
	{2837794, 16143, 1638399},
	{2837794, 16143, 1638399},
	{0, 16143, 3276800},
	{0, 16143, 3276800},
	{0, 16143, 3276800},
	{-2837794, 16143, 1638401},
	{-2837794, 16143, 1638401},
	{-2837794, 16143, -1638399},
	{-2837794, 16143, -1638399},
	{0, 16143, -3276800},
	{0, 16143, -3276800},
	{0, 16143, -3276800},
	{1005010, -8628865, 580242},
	{1005010, -8628865, 580242},
	{1005010, -8628865, 580242},
	{1005010, -8628865, -580242},
	{1005010, -8628865, -580242},
	{1005010, -8628865, -580242},
	{0, -8628865, 1160486},
	{0, -8628865, 1160486},
	{0, -8628865, 1160486},
	{-1005010, -8628865, 580242},
	{-1005010, -8628865, 580242},
	{-1005010, -8628865, 580242},
	{-1005011, -8628865, -580242},
	{-1005011, -8628865, -580242},
	{-1005011, -8628865, -580242},
	{0, -8628865, -1160486},
	{0, -8628865, -1160486},
	{0, -8628865, -1160486},
	{2383746, -8920595, 1376256},
	{2383746, -8920595, 1376256},
	{2383746, -8920595, 1376256},
	{2383746, -8920595, -1376256},
	{2383746, -8920595, -1376256},
	{2383746, -8920595, -1376256},
	{0, -8920595, 2752513},
	{0, -8920595, 2752513},
	{0, -8920595, 2752513},
	{-2383746, -8920595, 1376256},
	{-2383746, -8920595, 1376256},
	{-2383746, -8920595, 1376256},
	{-2383746, -8920595, -1376256},
	{-2383746, -8920595, -1376256},
	{-2383746, -8920595, -1376256},
	{0, -8920595, -2752513},
	{0, -8920595, -2752513},
	{0, -8920595, -2752513},
	{1287222, -9374916, 743178},
	{1287222, -9374916, 743178},
	{1287222, -9374916, 743178},
	{1287222, -9374916, -743178},
	{1287222, -9374916, -743178},
	{1287222, -9374916, -743178},
	{0, -9374916, 1486357},
	{0, -9374916, 1486357},
	{0, -9374916, 1486357},
	{-1287223, -9374916, 743178},
	{-1287223, -9374916, 743178},
	{-1287223, -9374916, 743178},
	{-1287223, -9374916, -743177},
	{-1287223, -9374916, -743177},
	{-1287223, -9374916, -743177},
	{0, -9374916, -1486357},
	{0, -9374916, -1486357},
	{0, -9374916, -1486357},
	{1856500, -10710023, 1071850},
	{1856500, -10710023, -1071851},
	{0, -10710023, 2143701},
	{-1856500, -10710023, 1071850},
	{-1856500, -10710023, -1071850},
	{0, -10710023, -2143701},
	{2124209, -11773319, 1226413},
	{2124209, -11773319, 1226413},
	{2124209, -11773319, 1226413},
	{2124209, -11773319, -1226413},
	{2124209, -11773319, -1226413},
	{2124209, -11773319, -1226413},
	{0, -11773319, 2452828},
	{0, -11773319, 2452828},
	{0, -11773319, 2452828},
	{-2124211, -11773319, 1226413},
	{-2124211, -11773319, 1226413},
	{-2124211, -11773319, 1226413},
	{-2124211, -11773319, -1226411},
	{-2124211, -11773319, -1226411},
	{-2124211, -11773319, -1226411},
	{0, -11773319, -2452828},
	{0, -11773319, -2452828},
	{0, -11773319, -2452828},
	{1235872, -12045324, 713530},
	{1235872, -12045324, -713531},
	{0, -12045324, 1427063},
	{-1235873, -12045324, 713531},
	{-1235873, -12045324, -713530},
	{0, -12045324, -1427063},
	{415138, -12638793, 399467},
	{415138, -12638793, 399467},
	{415138, -12638793, 399467},
	{415138, -12638793, 399467},
	{415138, -12638793, -399467},
	{415138, -12638793, -399467},
	{415138, -12638793, -399467},
	{415138, -12638793, -399467},
	{0, -12638793, 798935},
	{0, -12638793, 798935},
	{-415139, -12638793, 399467},
	{-415139, -12638793, 399467},
	{-415139, -12638793, 399467},
	{-415139, -12638793, 399467},
	{-415139, -12638793, -399467},
	{-415139, -12638793, -399467},
	{-415139, -12638793, -399467},
	{-415139, -12638793, -399467},
	{0, -12638793, -798935},
	{0, -12638793, -798935},
	{415138, -13367252, 399467},
	{415138, -13367252, 399467},
	{415138, -13367252, 399467},
	{415138, -13367252, 399467},
	{415138, -13367252, -399467},
	{415138, -13367252, -399467},
	{415138, -13367252, -399467},
	{415138, -13367252, -399467},
	{-415139, -13367252, -399467},
	{-415139, -13367252, -399467},
	{-415139, -13367252, -399467},
	{-415139, -13367252, -399467},
	{-415139, -13367252, 399467},
	{-415139, -13367252, 399467},
	{-415139, -13367252, 399467},
	{-415139, -13367252, 399467},
	{415138, -14048741, 399467},
	{415138, -14048741, 399467},
	{415138, -14048741, 399467},
	{415138, -14048741, 399467},
	{415138, -14048741, -399467},
	{415138, -14048741, -399467},
	{415138, -14048741, -399467},
	{415138, -14048741, -399467},
	{-415139, -14048741, -399467},
	{-415139, -14048741, -399467},
	{-415139, -14048741, -399467},
	{-415139, -14048741, -399467},
	{-415139, -14048741, 399467},
	{-415139, -14048741, 399467},
	{-415139, -14048741, 399467},
	{-415139, -14048741, 399467},
	{415138, -14960047, 399467},
	{415138, -14960047, 399467},
	{415138, -14960047, -399467},
	{415138, -14960047, -399467},
	{-415139, -14960047, -399467},
	{-415139, -14960047, -399467},
	{-415139, -14960047, 399467},
	{-415139, -14960047, 399467},
	{-1231696, -13367252, 399467},
	{-1231696, -13367252, 399467},
	{-1231696, -14048741, 399467},
	{-1231696, -14048741, 399467},
	{-1231696, -14048741, -399467},
	{-1231696, -14048741, -399467},
	{-1231696, -13367252, -399467},
	{-1231696, -13367252, -399467},
	{1231695, -13367252, -399467},
	{1231695, -13367252, -399467},
	{1231695, -14048741, -399467},
	{1231695, -14048741, -399467},
	{1231695, -14048741, 399467},
	{1231695, -14048741, 399467},
	{1231695, -13367252, 399467},
	{1231695, -13367252, 399467},
};

static POLYGON    PolygonKingBlack[] =
{
	{{62084, -20988, 0}, {87, 80, 81, 84}},
	{{0, 59211, -28087}, {91, 0, 85, 88}},
	{{-28087, 0, 31041}, {95, 2, 89, 92}},
	{{31041, -20989, 53766}, {99, 3, 93, 96}},
	{{53766, 29605, -28087}, {103, 4, 97, 100}},
	{{-28087, 51279, -31041}, {1, 5, 101, 82}},
	{{-31041, -20989, 53766}, {86, 83, 104, 106}},
	{{-20989, 53766, -29605}, {90, 6, 107, 108}},
	{{53766, -29605, -28087}, {94, 8, 109, 111}},
	{{-29605, -28087, 51279}, {98, 9, 112, 113}},
	{{-28087, 51279, -62084}, {102, 10, 114, 115}},
	{{51279, -62084, -20988}, {7, 11, 116, 105}},
	{{-62084, -20988, 0}, {110, 117, 16, 15}},
	{{-62084, -20988, 0}, {12, 17, 14, 13}},
	{{62084, -20988, 0}, {80, 87, 118, 121}},
	{{0, 59211, -28087}, {0, 91, 124, 119}},
	{{-28087, 0, 31041}, {2, 95, 127, 125}},
	{{31041, -20989, 53766}, {3, 99, 130, 128}},
	{{53766, 29605, -28087}, {4, 103, 133, 131}},
	{{-28087, 51279, -31041}, {5, 1, 122, 134}},
	{{-20989, -53766, -29605}, {123, 120, 136, 139}},
	{{-53766, -29605, -28087}, {18, 126, 142, 137}},
	{{-29605, -28087, -51279}, {20, 129, 145, 143}},
	{{-28087, -51279, 31041}, {21, 132, 148, 146}},
	{{-51279, 31041, -20989}, {22, 135, 151, 149}},
	{{31041, -20989, -53766}, {23, 19, 140, 152}},
	{{-20989, -53766, 29605}, {141, 138, 154, 157}},
	{{-53766, 29605, -28087}, {24, 144, 160, 155}},
	{{29605, -28087, -51279}, {26, 147, 163, 161}},
	{{-28087, -51279, 65536}, {27, 150, 166, 164}},
	{{-51279, 65536, 0}, {28, 153, 169, 167}},
	{{65536, 0, 0}, {29, 25, 158, 170}},
	{{0, 0, 32767}, {159, 156, 172, 173}},
	{{32767, 0, 56756}, {30, 162, 174, 36}},
	{{56756, -32767, 0}, {32, 165, 175, 38}},
	{{0, 56756, -65536}, {33, 168, 176, 39}},
	{{-65536, 0, 0}, {34, 171, 177, 40}},
	{{0, -32767, 0}, {35, 31, 37, 41}},
	{{0, 32767, 0}, {173, 172, 178, 181}},
	{{0, 56756, -32767}, {36, 174, 184, 179}},
	{{-32767, 0, 56756}, {38, 175, 187, 185}},
	{{56756, -65536, 0}, {39, 176, 190, 188}},
	{{0, 0, -32767}, {40, 177, 193, 191}},
	{{-32767, 0, -56756}, {41, 37, 182, 194}},
	{{65536, 0, 64461}, {183, 180, 196, 197}},
	{{64461, -11816, 0}, {42, 186, 198, 49}},
	{{32230, -11816, 55825}, {44, 189, 199, 50}},
	{{-32230, -11816, 55825}, {45, 192, 200, 51}},
	{{55825, -64461, -11816}, {46, 195, 201, 52}},
	{{0, -32230, -11816}, {47, 43, 48, 53}},
	{{0, 64461, -11816}, {197, 196, 202, 206}},
	{{0, 32230, -11816}, {49, 198, 210, 203}},
	{{55825, -32230, -11816}, {50, 199, 212, 211}},
	{{-11816, 55825, -64461}, {51, 200, 216, 213}},
	{{-11816, 0, -32230}, {52, 201, 220, 217}},
	{{-11816, -55825, 32230}, {53, 48, 207, 221}},
	{{0, 6782, 64116}, {204, 56, 214, 214}},
	{{0, 6782, 64116}, {208, 218, 59, 59}},
	{{-31041, -20989, 53766}, {209, 205, 222, 226}},
	{{-29605, -28087, 51279}, {215, 219, 230, 234}},
	{{6782, 64116, 11748}, {55, 57, 235, 223}},
	{{64116, 11748, -6782}, {58, 54, 227, 231}},
	{{6782, 64116, 11748}, {224, 236, 251, 238}},
	{{64116, 11748, -6782}, {232, 228, 243, 246}},
	{{-31041, -20989, 53766}, {242, 239, 254, 256}},
	{{-29605, -28087, 51279}, {250, 247, 258, 260}},
	{{6782, 64116, 11748}, {65, 253, 261, 255}},
	{{64116, 11748, -6782}, {67, 64, 257, 259}},
	{{6782, 64116, 11748}, {252, 237, 262, 264}},
	{{0, 6782, 64116}, {248, 66, 265, 266}},
	{{64116, 11748, -6782}, {233, 249, 267, 268}},
	{{-62084, -20988, 0}, {62, 63, 269, 263}},
	{{-29605, -28087, 51279}, {75, 74, 72, 73}},
	{{64116, 11748, -6782}, {244, 229, 270, 272}},
	{{0, 6782, 64116}, {240, 245, 273, 274}},
	{{6782, 64116, 11748}, {225, 241, 275, 276}},
	{{-62084, -20988, 0}, {60, 61, 277, 271}},
	{{-31041, -20989, 53766}, {79, 78, 76, 77}},
	{{0, 6782, 64116}, {68, 69, 70, 71}},
};

static ATTR    AttributeKingBlack[] =
{
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
};

jo_3d_mesh    MeshKingBlack =
{
	.data =
	{
		PointKingBlack,
		278,
		PolygonKingBlack,
		79,
		AttributeKingBlack
	}
};

/* Call this function in you code to display all objects */
static __jo_force_inline void       display_king_black_mesh(void)
{
	jo_3d_mesh_draw(&MeshKingBlack);
}

#endif /* !__3D_MODELKingBlack_H__ */
