/*
   3D model generated by Jo Map Editor v6.1
*/

#ifndef __3D_MODELRookWhite_H__
# define __3D_MODELRookWhite_H__

static POINT    PointRookWhite[] =
{
	{1205752, -2719168, -2088427},
	{-1205754, -2719168, -2088426},
	{2411507, -2719168, 0},
	{1205754, -2719168, 2088426},
	{-1205752, -2719168, 2088427},
	{-2411507, -2719168, 0},
	{1638399, -1139442, -2837794},
	{-1638401, -1139442, -2837794},
	{3276800, -1139442, 0},
	{1638401, -1139441, 2837794},
	{-1638399, -1139441, 2837794},
	{-3276800, -1139442, 0},
	{-1638401, 16143, -2837794},
	{1638399, 16143, -2837794},
	{3276800, 16143, 0},
	{1638401, 16143, 2837794},
	{-1638399, 16143, 2837794},
	{-3276800, 16143, 0},
	{967071, -10381492, -1675018},
	{-967071, -10381492, -1675018},
	{1934144, -10381492, 0},
	{967071, -10381492, 1675018},
	{-967071, -10381492, 1675019},
	{-1934144, -10381492, 0},
	{1376256, -10673220, -2383746},
	{-1376256, -10673220, -2383746},
	{2752513, -10673220, 0},
	{1376256, -10673220, 2383746},
	{-1376255, -10673220, 2383746},
	{-2752513, -10673220, 0},
	{1376256, -11491004, -2383746},
	{-1376256, -11491004, -2383746},
	{2752513, -11491004, 0},
	{1376256, -11491004, 2383746},
	{-1376255, -11491004, 2383746},
	{-2752513, -11491004, 0},
	{-1376256, -12513232, -2383746},
	{1376256, -12513232, -2383746},
	{2752513, -12513232, 0},
	{1376256, -12513232, 2383746},
	{-1376255, -12513232, 2383746},
	{-2752513, -12513232, 0},
	{963379, -12513232, -1668622},
	{1926758, -12513232, 0},
	{963379, -12513232, 1668622},
	{-963379, -12513232, 1668623},
	{-963379, -12513232, -1668622},
	{-1926758, -12513232, 0},
	{963379, -11491004, -1668622},
	{1926758, -11491004, 0},
	{-963379, -11491004, 1668623},
	{963379, -11491004, 1668622},
	{-1926758, -11491004, 0},
	{-963379, -11491004, -1668622},
	{-1205754, -2719168, -2088426},
	{-1638401, -1139442, -2837794},
	{-1638401, -1139442, -2837794},
	{-1638401, -1139442, -2837794},
	{1638399, -1139442, -2837794},
	{1638399, -1139442, -2837794},
	{1638399, -1139442, -2837794},
	{1205752, -2719168, -2088427},
	{3276800, -1139442, 0},
	{3276800, -1139442, 0},
	{3276800, -1139442, 0},
	{2411507, -2719168, 0},
	{1638401, -1139441, 2837794},
	{1638401, -1139441, 2837794},
	{1638401, -1139441, 2837794},
	{1205754, -2719168, 2088426},
	{-1638399, -1139441, 2837794},
	{-1638399, -1139441, 2837794},
	{-1638399, -1139441, 2837794},
	{-1205752, -2719168, 2088427},
	{-3276800, -1139442, 0},
	{-3276800, -1139442, 0},
	{-3276800, -1139442, 0},
	{-2411507, -2719168, 0},
	{-1638401, 16143, -2837794},
	{-1638401, 16143, -2837794},
	{1638399, 16143, -2837794},
	{1638399, 16143, -2837794},
	{3276800, 16143, 0},
	{3276800, 16143, 0},
	{1638401, 16143, 2837794},
	{1638401, 16143, 2837794},
	{-1638399, 16143, 2837794},
	{-1638399, 16143, 2837794},
	{-3276800, 16143, 0},
	{-3276800, 16143, 0},
	{967071, -10381492, -1675018},
	{967071, -10381492, -1675018},
	{967071, -10381492, -1675018},
	{-967071, -10381492, -1675018},
	{-967071, -10381492, -1675018},
	{-967071, -10381492, -1675018},
	{1934144, -10381492, 0},
	{1934144, -10381492, 0},
	{1934144, -10381492, 0},
	{967071, -10381492, 1675018},
	{967071, -10381492, 1675018},
	{967071, -10381492, 1675018},
	{-967071, -10381492, 1675019},
	{-967071, -10381492, 1675019},
	{-967071, -10381492, 1675019},
	{-1934144, -10381492, 0},
	{-1934144, -10381492, 0},
	{-1934144, -10381492, 0},
	{1376256, -10673220, -2383746},
	{1376256, -10673220, -2383746},
	{1376256, -10673220, -2383746},
	{-1376256, -10673220, -2383746},
	{-1376256, -10673220, -2383746},
	{-1376256, -10673220, -2383746},
	{2752513, -10673220, 0},
	{2752513, -10673220, 0},
	{2752513, -10673220, 0},
	{1376256, -10673220, 2383746},
	{1376256, -10673220, 2383746},
	{1376256, -10673220, 2383746},
	{-1376255, -10673220, 2383746},
	{-1376255, -10673220, 2383746},
	{-1376255, -10673220, 2383746},
	{-2752513, -10673220, 0},
	{-2752513, -10673220, 0},
	{-2752513, -10673220, 0},
	{1376256, -11491004, -2383746},
	{1376256, -11491004, -2383746},
	{1376256, -11491004, -2383746},
	{-1376256, -11491004, -2383746},
	{-1376256, -11491004, -2383746},
	{-1376256, -11491004, -2383746},
	{2752513, -11491004, 0},
	{2752513, -11491004, 0},
	{2752513, -11491004, 0},
	{1376256, -11491004, 2383746},
	{1376256, -11491004, 2383746},
	{1376256, -11491004, 2383746},
	{-1376255, -11491004, 2383746},
	{-1376255, -11491004, 2383746},
	{-1376255, -11491004, 2383746},
	{-2752513, -11491004, 0},
	{-2752513, -11491004, 0},
	{-2752513, -11491004, 0},
	{1376256, -12513232, -2383746},
	{1376256, -12513232, -2383746},
	{-1376256, -12513232, -2383746},
	{-1376256, -12513232, -2383746},
	{2752513, -12513232, 0},
	{2752513, -12513232, 0},
	{1376256, -12513232, 2383746},
	{1376256, -12513232, 2383746},
	{-1376255, -12513232, 2383746},
	{-1376255, -12513232, 2383746},
	{-2752513, -12513232, 0},
	{-2752513, -12513232, 0},
	{1926758, -12513232, 0},
	{1926758, -12513232, 0},
	{963379, -12513232, -1668622},
	{963379, -12513232, -1668622},
	{-963379, -12513232, 1668623},
	{-963379, -12513232, 1668623},
	{963379, -12513232, 1668622},
	{963379, -12513232, 1668622},
	{-963379, -12513232, -1668622},
	{-963379, -12513232, -1668622},
	{-1926758, -12513232, 0},
	{-1926758, -12513232, 0},
	{1926758, -11491004, 0},
	{1926758, -11491004, 0},
	{1926758, -11491004, 0},
	{963379, -11491004, -1668622},
	{963379, -11491004, -1668622},
	{963379, -11491004, -1668622},
	{-963379, -11491004, 1668623},
	{-963379, -11491004, 1668623},
	{-963379, -11491004, 1668623},
	{963379, -11491004, 1668622},
	{963379, -11491004, 1668622},
	{963379, -11491004, 1668622},
	{-963379, -11491004, -1668622},
	{-963379, -11491004, -1668622},
	{-963379, -11491004, -1668622},
	{-1926758, -11491004, 0},
	{-1926758, -11491004, 0},
	{-1926758, -11491004, 0},
};

static POLYGON    PolygonRookWhite[] =
{
	{{0, -17130, -63257}, {61, 54, 55, 58}},
	{{-63257, 0, -28087}, {65, 0, 59, 62}},
	{{-28087, -59211, 54783}, {69, 2, 63, 66}},
	{{54783, -17130, -31627}, {73, 3, 67, 70}},
	{{-31627, 51279, -28087}, {77, 4, 71, 74}},
	{{-28087, -29605, 54783}, {1, 5, 75, 56}},
	{{54783, -17130, 31627}, {60, 57, 78, 80}},
	{{-17130, 31627, 51279}, {64, 6, 81, 82}},
	{{31627, 51279, -28087}, {68, 8, 83, 84}},
	{{51279, -28087, 29605}, {72, 9, 85, 86}},
	{{-28087, 29605, 0}, {76, 10, 87, 88}},
	{{29605, 0, -17130}, {7, 11, 89, 79}},
	{{0, -17130, 63257}, {14, 17, 16, 15}},
	{{0, -17130, 63257}, {12, 17, 14, 13}},
	{{0, -17130, -63257}, {54, 61, 90, 93}},
	{{-63257, 0, -28087}, {0, 65, 96, 91}},
	{{-28087, -59211, 54783}, {2, 69, 99, 97}},
	{{54783, -17130, -31627}, {3, 73, 102, 100}},
	{{-31627, 51279, -28087}, {4, 77, 105, 103}},
	{{-28087, -29605, 54783}, {5, 1, 94, 106}},
	{{-17130, 31627, -51279}, {95, 92, 108, 111}},
	{{31627, -51279, -28087}, {18, 98, 114, 109}},
	{{-51279, -28087, 29605}, {20, 101, 117, 115}},
	{{-28087, 29605, -54783}, {21, 104, 120, 118}},
	{{29605, -54783, -17130}, {22, 107, 123, 121}},
	{{-54783, -17130, -31627}, {23, 19, 112, 124}},
	{{54783, -17130, 31627}, {113, 110, 126, 129}},
	{{-17130, 31627, 51279}, {24, 116, 132, 127}},
	{{31627, 51279, -28087}, {26, 119, 135, 133}},
	{{51279, -28087, 29605}, {27, 122, 138, 136}},
	{{-28087, 29605, 0}, {28, 125, 141, 139}},
	{{29605, 0, -17130}, {29, 25, 130, 142}},
	{{-17130, 31627, 51279}, {127, 132, 148, 144}},
	{{51279, -28087, 29605}, {136, 138, 152, 150}},
	{{29605, 0, -17130}, {142, 130, 146, 154}},
	{{-17130, -31627, -51279}, {145, 149, 156, 158}},
	{{-17130, -31627, -51279}, {151, 153, 160, 162}},
	{{-17130, -31627, -51279}, {155, 147, 164, 166}},
	{{-28087, 29605, 0}, {159, 157, 168, 171}},
	{{54783, -17130, 31627}, {163, 161, 174, 177}},
	{{31627, 51279, -28087}, {167, 165, 180, 183}},
	{{51279, -28087, 29605}, {143, 41, 47, 184}},
	{{29605, 0, -17130}, {140, 175, 45, 40}},
	{{-17130, -31627, -51279}, {34, 35, 185, 176}},
	{{51279, -28087, 29605}, {134, 169, 43, 38}},
	{{-17130, 31627, 51279}, {137, 39, 44, 178}},
	{{-17130, -31627, -51279}, {32, 33, 179, 170}},
	{{-17130, -31627, -51279}, {128, 172, 181, 131}},
	{{-17130, -31627, -51279}, {48, 49, 52, 53}},
	{{-17130, -31627, -51279}, {50, 52, 49, 51}},
	{{29605, 0, -17130}, {30, 37, 42, 173}},
	{{-17130, 31627, 51279}, {31, 182, 46, 36}},
};

static ATTR    AttributeRookWhite[] =
{
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
	ATTRIBUTE(Dual_Plane, SORT_CEN, No_Texture, 0x801f, CL32KRGB | No_Gouraud, CL32KRGB | MESHoff, sprPolygon, UseLight),
};

jo_3d_mesh    MeshRookWhite =
{
	.data =
	{
		PointRookWhite,
		186,
		PolygonRookWhite,
		52,
		AttributeRookWhite
	}
};

/* Call this function in you code to display all objects */
static __jo_force_inline void       display_rook_white_mesh(void)
{
	jo_3d_rotate_matrix_y(180);
	jo_3d_mesh_draw(&MeshRookWhite);
}

#endif /* !__3D_MODELRookWhite_H__ */
